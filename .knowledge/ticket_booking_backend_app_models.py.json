{"is_source_file": true, "format": "Python", "description": "This file defines ORM models for a ticket booking platform, including User, Event, Ticket, and Booking classes, with their relationships and some utility methods for password management.", "external_files": ["flask_sqlalchemy", "werkzeug.security"], "external_methods": ["generate_password_hash", "check_password_hash"], "published": ["User", "Event", "Ticket", "Booking", "db"], "classes": [{"name": "User", "description": "User model for authentication and booking."}, {"name": "Event", "description": "Event model representing a bookable event."}, {"name": "Ticket", "description": "Ticket model linked to an event."}, {"name": "Booking", "description": "Booking model for storing user bookings."}], "methods": [{"name": "set_password(self, password)", "description": "Hashes and stores the user's password.", "scope": "User", "scopeKind": "class"}, {"name": "check_password(self, password)", "description": "Verifies a given password against the stored hash.", "scope": "User", "scopeKind": "class"}], "calls": ["generate_password_hash", "check_password_hash", "db.func.now"], "search-terms": ["SQLAlchemy models", "User authentication", "Booking system", "Ticket booking", "Event management"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "Booking", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^class Booking(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Event", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^class Event(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Ticket", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^class Ticket(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^class User(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "booked_at", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    booked_at = db.Column(db.DateTime, nullable=False, server_default=db.func.now())$/", "language": "Python", "kind": "variable", "scope": "Booking", "scopeKind": "class"}, {"_type": "tag", "name": "booking_id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    booking_id = db.Column(db.Integer, db.ForeignKey('booking.id'))$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "bookings", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    bookings = db.relationship('Booking', backref='user', lazy=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "check_password", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    def check_password(self, password):$/", "language": "Python", "kind": "member", "signature": "(self, password)", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "date", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    date = db.Column(db.DateTime, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Event", "scopeKind": "class"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^db = SQLAlchemy()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    description = db.Column(db.Text, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Event", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    email = db.Column(db.String(120), unique=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "event_id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    event_id = db.Column(db.Integer, db.ForeignKey('event.id'), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "Booking", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "Event", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "is_booked", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    is_booked = db.Column(db.Boolean, default=False)$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "password_hash", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    password_hash = db.Column(db.String(128), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "price", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    price = db.Column(db.Float, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "seat", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    seat = db.Column(db.String(32), nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Ticket", "scopeKind": "class"}, {"_type": "tag", "name": "set_password", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    def set_password(self, password):$/", "language": "Python", "kind": "member", "signature": "(self, password)", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "ticket_id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    ticket_id = db.Column(db.Integer, db.ForeignKey('ticket.id'), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Booking", "scopeKind": "class"}, {"_type": "tag", "name": "tickets", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    tickets = db.relationship('Ticket', backref='event', lazy=True)$/", "language": "Python", "kind": "variable", "scope": "Event", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    title = db.Column(db.String(120), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Event", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Booking", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/models.py", "pattern": "/^    username = db.Column(db.String(80), unique=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}], "hash": "4b32e74ea7b9ec80810e50d041249b74", "format-version": 4, "code-base-name": "ticket_booking_backend", "filename": "ticket_booking_backend/app/models.py", "fields": [{"name": "booked_at = db.Column(db.DateTime, nullable=False, server_default=db.func.now())", "scope": "Booking", "scopeKind": "class", "description": "unavailable"}, {"name": "booking_id = db.Column(db.Integer, db.ForeignKey('booking.id'))", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "bookings = db.relationship('Booking', backref='user', lazy=True)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "date = db.Column(db.DateTime, nullable=False)", "scope": "Event", "scopeKind": "class", "description": "unavailable"}, {"name": "db = SQLAlchemy()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "description = db.Column(db.Text, nullable=True)", "scope": "Event", "scopeKind": "class", "description": "unavailable"}, {"name": "email = db.Column(db.String(120), unique=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "event_id = db.Column(db.Integer, db.ForeignKey('event.id'), nullable=False)", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "id = db.Column(db.Integer, primary_key=True)", "scope": "Booking", "scopeKind": "class", "description": "unavailable"}, {"name": "is_booked = db.Column(db.Boolean, default=False)", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "password_hash = db.Column(db.String(128), nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "price = db.Column(db.Float, nullable=False)", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "seat = db.Column(db.String(32), nullable=True)", "scope": "Ticket", "scopeKind": "class", "description": "unavailable"}, {"name": "ticket_id = db.Column(db.Integer, db.ForeignKey('ticket.id'), nullable=False)", "scope": "Booking", "scopeKind": "class", "description": "unavailable"}, {"name": "tickets = db.relationship('Ticket', backref='event', lazy=True)", "scope": "Event", "scopeKind": "class", "description": "unavailable"}, {"name": "title = db.Column(db.String(120), nullable=False)", "scope": "Event", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)", "scope": "Booking", "scopeKind": "class", "description": "unavailable"}, {"name": "username = db.Column(db.String(80), unique=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15": ""}]}