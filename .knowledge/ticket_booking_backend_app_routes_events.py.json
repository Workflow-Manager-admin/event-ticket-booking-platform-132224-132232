{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing events, including listing, creating, retrieving, updating, and deleting events, using Flask and Flask-RESTful with JWT authentication.", "external_files": ["flask.views", "flask", "flask_smorest", "flask_jwt_extended", "app.models"], "external_methods": ["flask.views.MethodView", "flask.request", "flask_smorest.Blueprint", "flask_smorest.abort", "flask_jwt_extended.jwt_required", "app.models.db", "app.models.Event", "datetime.datetime.fromisoformat"], "published": ["blp"], "classes": [{"name": "EventList", "description": "Handles GET for listing all events and POST for creating a new event."}, {"name": "EventDetail", "description": "Handles GET, PUT, DELETE operations for a specific event identified by event_id."}], "methods": [{"name": "parse_iso_date(date_str)", "description": "Converts an ISO formatted date string to a datetime object; aborts with 400 if invalid.", "scope": "", "scopeKind": ""}, {"name": "get(self)", "description": "Fetches all events or a specific event based on the context.", "scope": "EventList", "scopeKind": "class"}, {"name": "post(self)", "description": "Creates a new event after validating input and parsing date.", "scope": "EventList", "scopeKind": "class"}, {"name": "put(self, event_id)", "description": "Updates an existing event with provided data.", "scope": "EventDetail", "scopeKind": "class"}, {"name": "delete(self, event_id)", "description": "Deletes a specific event.", "scope": "EventDetail", "scopeKind": "class"}, {"name": "get(self, event_id)", "scope": "EventDetail", "scopeKind": "class", "description": "unavailable"}], "calls": ["Event.query.all", "Event.query.get", "db.session.add", "db.session.commit", "db.session.delete", "abort"], "search-terms": ["Events CRUD endpoints", "EventList", "EventDetail", "parse_iso_date", "flask_jwt_extended", "Event model", "/events"], "state": 2, "file_id": 11, "knowledge_revision": 43, "git_revision": "ee693b94723efe3807dabc5ba650b12c34b2d095", "revision_history": [{"27": ""}, {"43": "ee693b94723efe3807dabc5ba650b12c34b2d095"}], "ctags": [{"_type": "tag", "name": "EventDetail", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^class EventDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EventList", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^class EventList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^blp = Blueprint(\"Events\", \"events\", url_prefix=\"\\/events\", description=\"Events CRUD endpoints\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^    def delete(self, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, event_id)", "scope": "EventDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "EventList", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^    def get(self, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, event_id)", "scope": "EventDetail", "scopeKind": "class"}, {"_type": "tag", "name": "parse_iso_date", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^def parse_iso_date(date_str):$/", "language": "Python", "kind": "function", "signature": "(date_str)"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "EventList", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/app/routes/events.py", "pattern": "/^    def put(self, event_id):$/", "language": "Python", "kind": "member", "signature": "(self, event_id)", "scope": "EventDetail", "scopeKind": "class"}], "hash": "a96ddf89bb9d7e3828d2577f43f14b8c", "format-version": 4, "code-base-name": "ticket_booking_backend", "filename": "ticket_booking_backend/app/routes/events.py", "fields": [{"name": "blp = Blueprint(\"Events\", \"events\", url_prefix=\"\\/events\", description=\"Events CRUD endpoints\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}