{"is_source_file": true, "format": "Python", "description": "This is a test suite for a Flask-based ticket booking backend API, utilizing pytest fixtures and test functions to verify endpoints for authentication, user info, event management, ticket management, and bookings.", "external_files": ["app", "app.models"], "external_methods": ["create_app", "db.create_all", "db.session.remove", "db.drop_all"], "published": [], "classes": [], "methods": [{"name": "auth_header(token)", "description": "Creates an authorization header with a bearer token for authenticated requests.", "scope": "", "scopeKind": ""}, {"name": "app()", "description": "Fixture that initializes a Flask app in testing mode with an in-memory SQLite database.", "scope": "", "scopeKind": ""}, {"name": "client(app)", "description": "Fixture that provides a test client for making requests to the app.", "scope": "", "scopeKind": ""}, {"name": "user_data()", "description": "Fixture that returns a dictionary with user registration data.", "scope": "", "scopeKind": ""}, {"name": "user_token(client, user_data)", "description": "Fixture that registers and logs in a test user, returning an access token for authenticated requests.", "scope": "", "scopeKind": ""}, {"name": "test_health(client)", "description": "Tests the health check endpoint to ensure the service is responsive.", "scope": "", "scopeKind": ""}, {"name": "test_signup_success(client, user_data)", "description": "Verifies successful user signup returns expected data.", "scope": "", "scopeKind": ""}, {"name": "test_signup_duplicate(client, user_data)", "description": "Checks that duplicate signup attempts return a conflict status.", "scope": "", "scopeKind": ""}, {"name": "test_signup_missing_fields(client)", "description": "Ensures missing signup fields result in a bad request.", "scope": "", "scopeKind": ""}, {"name": "test_login_success(client, user_data)", "description": "Verifies login with correct credentials returns an access token.", "scope": "", "scopeKind": ""}, {"name": "test_login_invalid_creds(client, user_data)", "description": "Checks login with wrong credentials results in an unauthorized error.", "scope": "", "scopeKind": ""}, {"name": "test_login_missing_fields(client)", "description": "Ensures missing login fields result in a bad request.", "scope": "", "scopeKind": ""}, {"name": "test_user_me_success(client, user_token)", "description": "Tests retrieving current user info returns expected data when authorized.", "scope": "", "scopeKind": ""}, {"name": "test_user_me_unauthorized(client)", "description": "Verifies unauthorized access to user info endpoint results in an error.", "scope": "", "scopeKind": ""}, {"name": "test_events_crud(client, user_token)", "description": "Comprehensive CRUD tests for event endpoints including create, read, update, delete, and error cases.", "scope": "", "scopeKind": ""}, {"name": "test_tickets_crud(client, user_token)", "description": "Tests for ticket endpoints, covering creation, retrieval, update, deletion, and error conditions.", "scope": "", "scopeKind": ""}, {"name": "test_ticket_post_invalid_event(client, user_token)", "description": "Checks booking a ticket for a non-existent event results in a not found error.", "scope": "", "scopeKind": ""}, {"name": "test_ticket_post_missing_fields(client, user_token)", "description": "Ensures missing required fields when creating a ticket produce a bad request.", "scope": "", "scopeKind": ""}, {"name": "test_booking_lifecycle(client, user_token)", "description": "Tests full lifecycle of bookings, including creation, duplicate prevention, retrieval, and deletion.", "scope": "", "scopeKind": ""}, {"name": "test_get_bookings_requires_auth(client)", "description": "Verifies that fetching bookings without authentication fails.", "scope": "", "scopeKind": ""}, {"name": "test_booking_only_own(client, user_token)", "description": "Ensures users cannot delete bookings belonging to others.", "scope": "", "scopeKind": ""}], "calls": ["create_app", "db.create_all", "db.session.remove", "db.drop_all", "client.post", "client.get", "client.put", "client.delete"], "search-terms": ["pytest", "Flask", "ticket booking", "test_client", "authentication", "event management", "ticket APIs", "booking system", "REST API tests"], "state": 2, "file_id": 16, "knowledge_revision": 42, "git_revision": "32657229ecfdf9edf3c0c4e08022745cfb2cba6c", "revision_history": [{"37": "15b303dd9298832e797bd1a8f81bf24a0d76fe8d"}, {"38": "15b303dd9298832e797bd1a8f81bf24a0d76fe8d"}, {"42": "32657229ecfdf9edf3c0c4e08022745cfb2cba6c"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def app():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "auth_header", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def auth_header(token):$/", "language": "Python", "kind": "function", "signature": "(token)"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def client(app):$/", "language": "Python", "kind": "function", "signature": "(app)"}, {"_type": "tag", "name": "test_booking_lifecycle", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_booking_lifecycle(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_booking_only_own", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_booking_only_own(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_events_crud", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_events_crud(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_get_bookings_requires_auth", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_get_bookings_requires_auth(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_health(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_login_invalid_creds", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_login_invalid_creds(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_login_missing_fields", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_login_missing_fields(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_login_success", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_login_success(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_signup_duplicate", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_signup_duplicate(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_signup_missing_fields", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_signup_missing_fields(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "test_signup_success", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_signup_success(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}, {"_type": "tag", "name": "test_ticket_post_invalid_event", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_ticket_post_invalid_event(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_ticket_post_missing_fields", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_ticket_post_missing_fields(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_tickets_crud", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_tickets_crud(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_user_me_success", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_user_me_success(client, user_token):$/", "language": "Python", "kind": "function", "signature": "(client, user_token)"}, {"_type": "tag", "name": "test_user_me_unauthorized", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def test_user_me_unauthorized(client):$/", "language": "Python", "kind": "function", "signature": "(client)"}, {"_type": "tag", "name": "user_data", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def user_data():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "user_token", "path": "/home/kavia/workspace/code-generation/event-ticket-booking-platform-132224-132232/ticket_booking_backend/tests/test_endpoints.py", "pattern": "/^def user_token(client, user_data):$/", "language": "Python", "kind": "function", "signature": "(client, user_data)"}], "hash": "61842cf96e6c37016e14782f6d0c3368", "format-version": 4, "code-base-name": "ticket_booking_backend", "filename": "ticket_booking_backend/tests/test_endpoints.py"}